"%s" = "%s" # required for hacks do not change!
module_core = "Core"

##############
### Errors ###
##############
error = 'Error'
err_module = "Unknown Module: %s."
err_permission = "You do not have the required permissions to execute that method"
err_not_found = "File not found: %s"
err_not_null = "This field may not be left empty."
err_int_min = "may not be smaller than %s."
err_int_max = "may not be larger than %s."
err_stub = "This method is not implemented yet."
err_type_member = "Only members are allowed to execute this method. Please, first %s and then come back."
link_login_before_continue = "authenticate"

################
### Messages ###
################
msg_back_to = "You can now get back to %s."

##############
### Fields ###
##############
login = "Login"
tt_login = "Use your username or your email."
password = "Password"
tt_password = "A password has to be at least 4 characters"
submit = "Submit"
username = "Username"
tt_username = "Your username has to start with a letter"
email = "E-Mail"
tt_email = "Your email should be valid and has to be approved first, to be marked as in-use."

##################
### GDT_Select ###
##################
yes = "Yes"
no = "No"
choose = "Please choose"

#################
### Not Found ###
#################
mt_core_not_found = "File Not Found"
md_core_not_found = "The file was not found on this webserver."

###############
### Welcome ###
###############
mt_core_welcome = "Welcome"
md_core_welcome = "A default welcome page for a PyGDO installation."
msg_gdo_working = 'Welcome to your default PyGDO installation.'

############
### Echo ###
############
mt_core_echo = "Echo"
md_core_echo = "The echo command replies it's rest of text parameter."

###############
### Version ###
###############
mt_core_version = "Version"
md_core_version = "Print python and GDO version."
msg_version = "Python %s - GDOv%s"

############
### Perf ###
############
mt_core_perf = "Performance"
md_core_perf = "Print PyGDO performance metrics."
perf_version = "Version: %s"
perf_cpu = "CPU %s%%"
perf_mem = "Memory: %s"
perf_db = "DB (%sR/%sW/#%s)"
perf_code = "%s GDTs / %s GDOs"

############
### Help ###
############
mt_core_help = "Command Overview"
md_core_help = "List all available commands for this PyGDO installation."
msg_help_all_commands = "Commands: %s."
msg_help_for = "%s: %s %s"

##############
### Reload ###
##############
mt_core_reload = "Reload"
md_core_reload = "Reloads the application code, except the base module. Useful for long living gdo applications like chatbots or cli repl."
err_reload_module = "Cannot reload module %s: %s"
msg_modules_reloaded = "All modules have been reloaded."

##############
### Launch ###
##############
mt_core_launch = "Launch Chatbot Daemon"
md_core_launch = "This method launches the dog chatbot."
err_dog_already_running = "The bot is already running. You can force a new process with the --force parameter."

##################
### Add Server ###
##################
mt_core_add_server = "Add Server"
md_core_add_server = "Add a new Server with a connector."
msg_added_dog_server = "A new %s server has been added: %s ID#%s."
